// multiorg@example.com „Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆÁ¢∫Ë™ç„Çπ„ÇØ„É™„Éó„Éà
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Áí∞Â¢ÉÂ§âÊï∞„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function checkMultiOrgUser() {
  console.log('üîç multiorg@example.com „Ç¢„Ç´„Ç¶„É≥„Éà„ÇíÁ¢∫Ë™ç‰∏≠...\n')

  // 1. „É¶„Éº„Ç∂„Éº„ÅÆÂ≠òÂú®Á¢∫Ë™ç
  const { data: users, error: userError } = await supabase.auth.admin.listUsers()

  if (userError) {
    console.error('‚ùå „É¶„Éº„Ç∂„ÉºÂèñÂæó„Ç®„É©„Éº:', userError.message)
    return false
  }

  const multiOrgUser = users.users.find(u => u.email === 'multiorg@example.com')

  if (!multiOrgUser) {
    console.log('‚ùå multiorg@example.com „Ç¢„Ç´„Ç¶„É≥„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì')
    console.log('üìù Phase 1„ÅÆÊâãÂãï‰ΩúÊ•≠„ÅåÂøÖË¶Å„Åß„Åô:')
    console.log('   1. http://www.local.test:3000/signup „Åß„Ç¢„Ç´„Ç¶„É≥„Éà‰ΩúÊàê')
    console.log('   2. Supabase Dashboard„ÅßÁµÑÁπî2„ÇíËøΩÂä†')
    return false
  }

  console.log('‚úÖ multiorg@example.com „Ç¢„Ç´„Ç¶„É≥„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü')
  console.log(`   „É¶„Éº„Ç∂„ÉºID: ${multiOrgUser.id}`)
  console.log(`   „É°„Éº„É´: ${multiOrgUser.email}\n`)

  // 2. ÊâÄÂ±ûÁµÑÁπî„ÅÆÁ¢∫Ë™ç
  const { data: memberships, error: memberError } = await supabase
    .from('organization_members')
    .select(`
      role,
      organization:organizations (
        id,
        name
      )
    `)
    .eq('user_id', multiOrgUser.id)
    .is('deleted_at', null)

  if (memberError) {
    console.error('‚ùå ÁµÑÁπî„É°„É≥„Éê„Éº„Ç∑„ÉÉ„ÉóÂèñÂæó„Ç®„É©„Éº:', memberError.message)
    return false
  }

  console.log(`üìä ÊâÄÂ±ûÁµÑÁπî: ${memberships.length}ÂÄã\n`)

  if (memberships.length === 0) {
    console.log('‚ùå ÁµÑÁπî„Å´ÊâÄÂ±û„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì')
    console.log('üìù Supabase Dashboard„ÅßÁµÑÁπî„ÇíËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑ')
    return false
  }

  memberships.forEach((m, index) => {
    console.log(`   ${index + 1}. ${m.organization.name}`)
    console.log(`      - ÁµÑÁπîID: ${m.organization.id}`)
    console.log(`      - Ê®©Èôê: ${m.role}`)
  })

  console.log('')

  if (memberships.length < 2) {
    console.log('‚ö†Ô∏è  ÁµÑÁπî„Åå1„Å§„Åó„Åã„ÅÇ„Çä„Åæ„Åõ„ÇìÔºà2„Å§ÂøÖË¶ÅÔºâ')
    console.log('üìù Supabase Dashboard„ÅßÁµÑÁπî2„ÇíËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑ:')
    console.log(`   1. ÁµÑÁπî2„Çí‰ΩúÊàê: INSERT INTO organizations...`)
    console.log(`   2. „É¶„Éº„Ç∂„ÉºID ${multiOrgUser.id} „ÇíÁµÑÁπî2„Å´adminÊ®©Èôê„ÅßËøΩÂä†`)
    return false
  }

  console.log('‚úÖ Phase 1ÂÆå‰∫ÜÔºÅ2„Å§„ÅÆÁµÑÁπî„Å´ÊâÄÂ±û„Åó„Å¶„ÅÑ„Åæ„Åô')
  console.log('üéâ Phase 2ÔºàE2E„ÉÜ„Çπ„ÉàÔºâ„Å´ÈÄ≤„ÇÅ„Åæ„Åô\n')
  return true
}

checkMultiOrgUser()
  .then(success => {
    process.exit(success ? 0 : 1)
  })
  .catch(error => {
    console.error('‚ùå „Ç®„É©„Éº:', error)
    process.exit(1)
  })
